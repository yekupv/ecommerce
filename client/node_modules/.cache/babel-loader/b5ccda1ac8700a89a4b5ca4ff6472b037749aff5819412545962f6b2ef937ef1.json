{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Makhambet\\\\Desktop\\\\ecommerce\\\\client\\\\src\\\\components\\\\TypeBar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { Context } from \"..\";\nimport { observer } from \"mobx-react-lite\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TypeBar = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    device\n  } = useContext(Context);\n  const isAllActive = !(\"id\" in device.selectedType);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      style: {\n        maxWidth: 200\n      },\n      children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        style: {\n          cursor: \"pointer\"\n        },\n        active: isAllActive,\n        onClick: () => {\n          device.setSelectedType({});\n        },\n        children: \"ALL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this), device.types.map(type => {\n        var _device$selectedType;\n        return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          style: {\n            cursor: \"pointer\"\n          },\n          active: type.id === ((_device$selectedType = device.selectedType) === null || _device$selectedType === void 0 ? void 0 : _device$selectedType.id),\n          onClick: () => {\n            device.setSelectedType(type);\n          },\n          children: type.name\n        }, type.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}, \"OFJwJETkh/v32tNXsuGFzaMBUfI=\")), \"OFJwJETkh/v32tNXsuGFzaMBUfI=\");\n_c2 = TypeBar;\nexport default TypeBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"TypeBar$observer\");\n$RefreshReg$(_c2, \"TypeBar\");","map":{"version":3,"names":["React","useContext","Context","observer","ListGroup","jsxDEV","_jsxDEV","Fragment","_Fragment","TypeBar","_s","_c","device","isAllActive","selectedType","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","Item","cursor","active","onClick","setSelectedType","types","map","type","_device$selectedType","id","name","_c2","$RefreshReg$"],"sources":["C:/Users/Makhambet/Desktop/ecommerce/client/src/components/TypeBar.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Context } from \"..\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nconst TypeBar = observer(() => {\r\n\tconst { device } = useContext(Context);\r\n\tconst isAllActive = !(\"id\" in device.selectedType);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3></h3>\r\n\t\t\t<ListGroup style={{ maxWidth: 200 }}>\r\n\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\tactive={isAllActive}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tdevice.setSelectedType({});\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tALL\r\n\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t{device.types.map((type) => (\r\n\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\tkey={type.id}\r\n\t\t\t\t\t\tactive={type.id === device.selectedType?.id}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tdevice.setSelectedType(type);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{type.name}\r\n\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t))}\r\n\t\t\t</ListGroup>\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nexport default TypeBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,OAAO,QAAQ,IAAI;AAC5B,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,OAAO,GAAAC,EAAA,CAAGP,QAAQ,CAAAQ,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EAC9B,MAAM;IAAEE;EAAO,CAAC,GAAGX,UAAU,CAACC,OAAO,CAAC;EACtC,MAAMW,WAAW,GAAG,EAAE,IAAI,IAAID,MAAM,CAACE,YAAY,CAAC;EAClD,oBACCR,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACCT,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACTb,OAAA,CAACF,SAAS;MAACgB,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAAAN,QAAA,gBACnCT,OAAA,CAACF,SAAS,CAACkB,IAAI;QACdF,KAAK,EAAE;UAAEG,MAAM,EAAE;QAAU,CAAE;QAC7BC,MAAM,EAAEX,WAAY;QACpBY,OAAO,EAAEA,CAAA,KAAM;UACdb,MAAM,CAACc,eAAe,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAE;QAAAX,QAAA,EACF;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAiB,EAChBP,MAAM,CAACe,KAAK,CAACC,GAAG,CAAEC,IAAI;QAAA,IAAAC,oBAAA;QAAA,oBACtBxB,OAAA,CAACF,SAAS,CAACkB,IAAI;UACdF,KAAK,EAAE;YAAEG,MAAM,EAAE;UAAU,CAAE;UAE7BC,MAAM,EAAEK,IAAI,CAACE,EAAE,OAAAD,oBAAA,GAAKlB,MAAM,CAACE,YAAY,cAAAgB,oBAAA,uBAAnBA,oBAAA,CAAqBC,EAAE,CAAC;UAC5CN,OAAO,EAAEA,CAAA,KAAM;YACdb,MAAM,CAACc,eAAe,CAACG,IAAI,CAAC;UAC7B,CAAE;UAAAd,QAAA,EAEDc,IAAI,CAACG;QAAI,GANLH,IAAI,CAACE,EAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAOI;MAAA,CACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACS;EAAA,gBACV;AAEL,CAAC,kCAAC;AAACc,GAAA,GA/BGxB,OAAO;AAiCb,eAAeA,OAAO;AAAC,IAAAE,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}